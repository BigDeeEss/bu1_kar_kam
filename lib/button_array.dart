//  Import dart and flutter packages.
import 'package:flutter/material.dart';

// Import project-specific files.
// import 'package:kar_kam/animation_status_notification.dart';
import 'package:kar_kam/app_settings.dart';
import 'package:kar_kam/button.dart';
import 'package:kar_kam/button_specs.dart';
import 'package:kar_kam/global_key_extension.dart';

/// [ButtonArray] implements a linear button array on screen.
class ButtonArray extends StatelessWidget {
  ButtonArray({Key? key}) : super(key: key);

  /// [buttonSpecList] defines the specs for each button on the screen.
  static List<ButtonSpec> buttonSpecList = [
    settingsButton,
    filesButton,
    homeButton,
  ];

  final alignGlobalKey = GlobalKey();
  final flexGlobalKey = GlobalKey();
  final buttonListGlobalKey = <GlobalKey>[
    GlobalKey(),
    GlobalKey(),
    GlobalKey(),
  ];

  List<Widget> buttonList(List<ButtonSpec> buttonSpecList) {
    //  Initialise widgetList so that it is ready for population.
    List<Widget> widgetList = [];

    //  Loop over items in buttonSpecList and convert each to its
    //  corresponding button.
    // buttonSpecList.forEach((element) => widgetList.add(Button(element, key: )));
    for (int i = 0; i < buttonSpecList.length; i++) {
      widgetList.add(Button(
        buttonSpec: buttonSpecList[i],
        key: buttonListGlobalKey[i],
      ));
    }

    return widgetList;
  }

  @override
  Widget build(BuildContext context) {
    WidgetsBinding.instance!.addPostFrameCallback((_) {
      print('From alignGlobalKey, absolute coordinates on screen: '
          '${alignGlobalKey.globalPaintBounds}');
      print('From flexGlobalKey, absolute coordinates on screen: '
          '${flexGlobalKey.globalPaintBounds}');
      print('From buttonListGlobalKey, absolute coordinates on screen: '
          '${buttonListGlobalKey[0].globalPaintBounds}');
      print('From buttonListGlobalKey, absolute coordinates on screen: '
          '${buttonListGlobalKey[1].globalPaintBounds}');
      print('From buttonListGlobalKey, absolute coordinates on screen: '
          '${buttonListGlobalKey[2].globalPaintBounds}');
    });
    //  Use a Container-Align-Column construct to position items in the list
    //  generated by the slidingButtonList method.
    return Container(
      //  Request that this container expands to fit the entire screen.
      //  Required for calculating the button start position off-screen.
      constraints: BoxConstraints.expand(
        width: double.infinity,
        height: double.infinity,
      ),
      //  Position the button array according to Align specs.
      //  Specs provided by AppSettings.
      child: Align(
        key: alignGlobalKey,
        heightFactor: 1.0,
        widthFactor: 1.0,
        alignment: AppSettings.buttonAlignment,
        child: Flex(
          key: flexGlobalKey,
          direction: AppSettings.buttonAxis,
          textDirection: (AppSettings.buttonAlignment.x < 0)
              ? TextDirection.ltr
              : TextDirection.rtl,
          crossAxisAlignment: CrossAxisAlignment.center,
          verticalDirection: (AppSettings.buttonAlignment.y < 0)
              ? VerticalDirection.down
              : VerticalDirection.up,
          children: buttonList(buttonSpecList),
        ),
      ),
    );
  }
}
